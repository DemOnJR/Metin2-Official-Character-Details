///Add
#if defined(ENABLE_DETAILS_UI)
#include "Packet.h"
#include <unordered_map>
PyObject* itemGetApplyPoint(PyObject* poSelf, PyObject* poArgs)
{
	BYTE bVal;
	if (!PyTuple_GetByte(poArgs, 0, &bVal))
		return Py_BuildException();

	static const std::unordered_map<BYTE, BYTE> PointMap
	{
		{ CItemData::APPLY_ATTBONUS_HUMAN, POINT_ATTBONUS_HUMAN },
		{ CItemData::APPLY_ATTBONUS_ORC, POINT_ATTBONUS_ORC },
		{ CItemData::APPLY_ATTBONUS_UNDEAD, POINT_ATTBONUS_UNDEAD },
		{ CItemData::APPLY_ATTBONUS_ANIMAL, POINT_ATTBONUS_ANIMAL },
		{ CItemData::APPLY_ATTBONUS_MILGYO, POINT_ATTBONUS_MILGYO },
		{ CItemData::APPLY_ATTBONUS_DEVIL, POINT_ATTBONUS_DEVIL },
		{ CItemData::APPLY_ATT_GRADE_BONUS, POINT_ATT_GRADE_BONUS },
		{ CItemData::APPLY_DEF_GRADE_BONUS, POINT_DEF_GRADE_BONUS },
		{ CItemData::APPLY_NORMAL_HIT_DAMAGE_BONUS, POINT_NORMAL_HIT_DAMAGE_BONUS },
		{ CItemData::APPLY_SKILL_DAMAGE_BONUS, POINT_SKILL_DAMAGE_BONUS },
		{ CItemData::APPLY_SKILL_DEFEND_BONUS, POINT_SKILL_DEFEND_BONUS },
		{ CItemData::APPLY_MAGIC_ATTBONUS_PER, POINT_MAGIC_ATT_GRADE_BONUS },
		{ CItemData::APPLY_CRITICAL_PCT, POINT_CRITICAL_PCT },
		{ CItemData::APPLY_PENETRATE_PCT, POINT_PENETRATE_PCT },
		{ CItemData::APPLY_RESIST_MAGIC, POINT_RESIST_MAGIC },
		{ CItemData::APPLY_RESIST_ELEC, POINT_RESIST_ELEC },
		{ CItemData::APPLY_RESIST_FIRE, POINT_RESIST_FIRE },
		{ CItemData::APPLY_RESIST_WIND, POINT_RESIST_WIND },
		//----------------FIND START----------------
		{ CItemData::APPLY_ATT_BONUS_TO_MONSTER, POINT_MAX_NUM },
		{ CItemData::APPLY_MELEE_MAGIC_ATTBONUS_PER, POINT_MAX_NUM },
		{ CItemData::APPLY_ANTI_CRITICAL_PCT, POINT_MAX_NUM },
		{ CItemData::APPLY_ANTI_PENETRATE_PCT, POINT_MAX_NUM },
		{ CItemData::APPLY_RESIST_ICE, POINT_MAX_NUM },
		{ CItemData::APPLY_RESIST_DARK, POINT_MAX_NUM },
		{ CItemData::APPLY_RESIST_EARTH, POINT_MAX_NUM },
		{ CItemData::APPLY_ATT_BONUS_TO_WARRIOR, POINT_MAX_NUM },
		{ CItemData::APPLY_ATT_BONUS_TO_ASSASSIN, POINT_MAX_NUM },
		{ CItemData::APPLY_ATT_BONUS_TO_SURA, POINT_MAX_NUM },
		{ CItemData::APPLY_ATT_BONUS_TO_SHAMAN, POINT_MAX_NUM },
		{ CItemData::APPLY_RESIST_WARRIOR, POINT_MAX_NUM },
		{ CItemData::APPLY_RESIST_ASSASSIN, POINT_MAX_NUM },
		{ CItemData::APPLY_RESIST_SURA, POINT_MAX_NUM },
		{ CItemData::APPLY_RESIST_SHAMAN, POINT_MAX_NUM },
#if defined(ENABLE_WOLFMAN_CHARACTER)
		{ CItemData::APPLY_RESIST_WOLFMAN, POINT_MAX_NUM },
		{ CItemData::APPLY_ATTBONUS_WOLFMAN, POINT_MAX_NUM },
		{ CItemData::APPLY_RESIST_CLAW, POINT_MAX_NUM },
#endif
		//----------------END OF FIND----------------
		{ CItemData::APPLY_RESIST_SWORD, POINT_RESIST_SWORD },
		{ CItemData::APPLY_RESIST_TWOHAND, POINT_RESIST_TWOHAND },
		{ CItemData::APPLY_RESIST_DAGGER, POINT_RESIST_DAGGER },
		{ CItemData::APPLY_RESIST_BELL, POINT_RESIST_BELL },
		{ CItemData::APPLY_RESIST_FAN, POINT_RESIST_FAN },
		{ CItemData::APPLY_RESIST_BOW, POINT_RESIST_BOW },
		{ CItemData::APPLY_STUN_PCT, POINT_STUN_PCT },
		{ CItemData::APPLY_SLOW_PCT, POINT_SLOW_PCT },
		{ CItemData::APPLY_POISON_PCT, POINT_POISON_PCT },
		{ CItemData::APPLY_POISON_REDUCE, POINT_POISON_REDUCE },
		{ CItemData::APPLY_STEAL_HP, POINT_STEAL_HP },
		{ CItemData::APPLY_STEAL_SP, POINT_STEAL_SP },
		{ CItemData::APPLY_HP_REGEN, POINT_HP_REGEN },
		{ CItemData::APPLY_SP_REGEN, POINT_SP_REGEN },
		{ CItemData::APPLY_BLOCK, POINT_BLOCK },
		{ CItemData::APPLY_DODGE, POINT_DODGE },
		{ CItemData::APPLY_REFLECT_MELEE, POINT_REFLECT_MELEE },
		{ CItemData::APPLY_KILL_HP_RECOVER, POINT_KILL_HP_RECOVER },
		{ CItemData::APPLY_KILL_SP_RECOVER, POINT_KILL_SP_RECOVER },
		{ CItemData::APPLY_EXP_DOUBLE_BONUS, POINT_EXP_DOUBLE_BONUS },
		{ CItemData::APPLY_GOLD_DOUBLE_BONUS, POINT_GOLD_DOUBLE_BONUS },
		{ CItemData::APPLY_ITEM_DROP_BONUS, POINT_ITEM_DROP_BONUS },
		{ CItemData::APPLY_MALL_ATTBONUS, POINT_MALL_ATTBONUS },
		{ CItemData::APPLY_MALL_DEFBONUS, POINT_MALL_DEFBONUS },
		{ CItemData::APPLY_MALL_EXPBONUS, POINT_MALL_EXPBONUS },
		{ CItemData::APPLY_MALL_ITEMBONUS, POINT_MALL_ITEMBONUS },
		{ CItemData::APPLY_MALL_GOLDBONUS, POINT_MALL_GOLDBONUS },
	};
	
	BYTE bRet = POINT_MAX_NUM;

	auto it = PointMap.find(bVal);
	if (it != PointMap.end())
		bRet = it->second;

	return Py_BuildValue("i", bRet);
}
#endif

//Find
		{ "LoadItemTable",					itemLoadItemTable,						METH_VARARGS },
		
///Add
#if defined(ENABLE_DETAILS_UI)
		{ "GetApplyPoint",					itemGetApplyPoint,						METH_VARARGS },
#endif